import os
import sys

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from src.backend.game import Room
from encoder import encode


def test_remove_ship():
    room = Room()
    first_player = room.player_first
    second_player = room.player_second

    if True:
        room.place_ship(second_player, [(1, 1), (1, 2), (1, 3)])

        assert encode(room.get_field(second_player)) == [
            [0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
        ]

        room.place_ship(second_player, [(5, 6), (5, 7)])

        assert encode(room.get_field(second_player)) == [
            [0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 1, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 1, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
        ]

        room.remove_ship(second_player, [(1, 1), (2, 1), (3, 1)])

        assert encode(room.get_field(second_player)) == [
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 1, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 1, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
        ]

        room.remove_ship(second_player, [(6, 5), (7, 5)])

        assert encode(room.get_field(second_player)) == [
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
        ]

    if True:
        room.place_ship(first_player, [(1, 1), (1, 2), (1, 3)])

        assert encode(room.get_field(first_player)) == [
            [0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
        ]

        room.place_ship(first_player, [(5, 6), (5, 7)])

        assert encode(room.get_field(first_player)) == [
            [0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 1, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 1, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
        ]

        room.remove_ship(first_player, [(1, 1), (2, 1), (3, 1)])

        assert encode(room.get_field(first_player)) == [
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 1, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 1, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
        ]

        room.remove_ship(first_player, [(6, 5), (7, 5)])

        assert encode(room.get_field(first_player)) == [
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
        ]
